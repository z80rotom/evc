# Generated from evc.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,52,459,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,
        1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,
        12,1,12,5,12,151,8,12,10,12,12,12,154,9,12,1,12,1,12,1,13,1,13,1,
        13,1,13,1,13,1,13,3,13,164,8,13,1,14,1,14,1,14,1,14,5,14,170,8,14,
        10,14,12,14,173,9,14,1,14,1,14,1,15,1,15,1,15,1,15,5,15,181,8,15,
        10,15,12,15,184,9,15,1,15,1,15,1,15,1,15,1,15,1,16,3,16,192,8,16,
        1,16,4,16,195,8,16,11,16,12,16,196,1,16,1,16,4,16,201,8,16,11,16,
        12,16,202,3,16,205,8,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,
        1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,
        1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,
        1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,
        1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,
        1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,
        1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,
        1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,
        1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,
        1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,
        1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,
        1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,
        4,50,410,8,50,11,50,12,50,411,1,51,1,51,1,51,5,51,417,8,51,10,51,
        12,51,420,9,51,1,52,1,52,1,53,1,53,1,54,1,54,1,54,1,54,3,54,430,
        8,54,1,55,1,55,1,55,1,55,3,55,436,8,55,1,56,1,56,1,56,3,56,441,8,
        56,1,57,1,57,1,57,3,57,446,8,57,1,58,1,58,1,58,1,58,3,58,452,8,58,
        1,59,1,59,1,59,1,59,3,59,458,8,59,1,182,0,60,1,1,3,2,5,3,7,4,9,5,
        11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
        17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,
        28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
        39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,
        50,101,51,103,52,105,0,107,0,109,0,111,0,113,0,115,0,117,0,119,0,
        1,0,5,1,0,39,39,2,0,10,10,13,13,2,0,9,9,32,32,3,0,65,90,95,95,97,
        122,1,0,48,57,471,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
        0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
        0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
        0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
        0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
        0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
        0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,
        0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
        0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,
        0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,
        0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,1,121,1,0,0,0,3,123,1,
        0,0,0,5,125,1,0,0,0,7,127,1,0,0,0,9,129,1,0,0,0,11,131,1,0,0,0,13,
        133,1,0,0,0,15,135,1,0,0,0,17,137,1,0,0,0,19,139,1,0,0,0,21,142,
        1,0,0,0,23,145,1,0,0,0,25,148,1,0,0,0,27,163,1,0,0,0,29,165,1,0,
        0,0,31,176,1,0,0,0,33,191,1,0,0,0,35,206,1,0,0,0,37,210,1,0,0,0,
        39,214,1,0,0,0,41,220,1,0,0,0,43,230,1,0,0,0,45,235,1,0,0,0,47,241,
        1,0,0,0,49,246,1,0,0,0,51,254,1,0,0,0,53,261,1,0,0,0,55,267,1,0,
        0,0,57,275,1,0,0,0,59,280,1,0,0,0,61,285,1,0,0,0,63,291,1,0,0,0,
        65,297,1,0,0,0,67,302,1,0,0,0,69,308,1,0,0,0,71,312,1,0,0,0,73,317,
        1,0,0,0,75,326,1,0,0,0,77,329,1,0,0,0,79,336,1,0,0,0,81,340,1,0,
        0,0,83,345,1,0,0,0,85,355,1,0,0,0,87,359,1,0,0,0,89,367,1,0,0,0,
        91,374,1,0,0,0,93,381,1,0,0,0,95,386,1,0,0,0,97,391,1,0,0,0,99,398,
        1,0,0,0,101,404,1,0,0,0,103,413,1,0,0,0,105,421,1,0,0,0,107,423,
        1,0,0,0,109,429,1,0,0,0,111,435,1,0,0,0,113,440,1,0,0,0,115,445,
        1,0,0,0,117,451,1,0,0,0,119,457,1,0,0,0,121,122,5,59,0,0,122,2,1,
        0,0,0,123,124,5,42,0,0,124,4,1,0,0,0,125,126,5,123,0,0,126,6,1,0,
        0,0,127,128,5,125,0,0,128,8,1,0,0,0,129,130,5,58,0,0,130,10,1,0,
        0,0,131,132,5,61,0,0,132,12,1,0,0,0,133,134,5,44,0,0,134,14,1,0,
        0,0,135,136,5,40,0,0,136,16,1,0,0,0,137,138,5,41,0,0,138,18,1,0,
        0,0,139,140,5,45,0,0,140,141,5,62,0,0,141,20,1,0,0,0,142,143,5,43,
        0,0,143,144,5,61,0,0,144,22,1,0,0,0,145,146,5,45,0,0,146,147,5,61,
        0,0,147,24,1,0,0,0,148,152,5,39,0,0,149,151,8,0,0,0,150,149,1,0,
        0,0,151,154,1,0,0,0,152,150,1,0,0,0,152,153,1,0,0,0,153,155,1,0,
        0,0,154,152,1,0,0,0,155,156,5,39,0,0,156,26,1,0,0,0,157,164,3,109,
        54,0,158,164,3,111,55,0,159,164,3,113,56,0,160,164,3,115,57,0,161,
        164,3,117,58,0,162,164,3,119,59,0,163,157,1,0,0,0,163,158,1,0,0,
        0,163,159,1,0,0,0,163,160,1,0,0,0,163,161,1,0,0,0,163,162,1,0,0,
        0,164,28,1,0,0,0,165,166,5,47,0,0,166,167,5,47,0,0,167,171,1,0,0,
        0,168,170,8,1,0,0,169,168,1,0,0,0,170,173,1,0,0,0,171,169,1,0,0,
        0,171,172,1,0,0,0,172,174,1,0,0,0,173,171,1,0,0,0,174,175,6,14,0,
        0,175,30,1,0,0,0,176,177,5,47,0,0,177,178,5,42,0,0,178,182,1,0,0,
        0,179,181,9,0,0,0,180,179,1,0,0,0,181,184,1,0,0,0,182,183,1,0,0,
        0,182,180,1,0,0,0,183,185,1,0,0,0,184,182,1,0,0,0,185,186,5,42,0,
        0,186,187,5,47,0,0,187,188,1,0,0,0,188,189,6,15,0,0,189,32,1,0,0,
        0,190,192,5,45,0,0,191,190,1,0,0,0,191,192,1,0,0,0,192,194,1,0,0,
        0,193,195,3,107,53,0,194,193,1,0,0,0,195,196,1,0,0,0,196,194,1,0,
        0,0,196,197,1,0,0,0,197,204,1,0,0,0,198,200,5,46,0,0,199,201,3,107,
        53,0,200,199,1,0,0,0,201,202,1,0,0,0,202,200,1,0,0,0,202,203,1,0,
        0,0,203,205,1,0,0,0,204,198,1,0,0,0,204,205,1,0,0,0,205,34,1,0,0,
        0,206,207,7,1,0,0,207,208,1,0,0,0,208,209,6,17,0,0,209,36,1,0,0,
        0,210,211,7,2,0,0,211,212,1,0,0,0,212,213,6,18,0,0,213,38,1,0,0,
        0,214,215,5,97,0,0,215,216,5,108,0,0,216,217,5,105,0,0,217,218,5,
        97,0,0,218,219,5,115,0,0,219,40,1,0,0,0,220,221,5,97,0,0,221,222,
        5,110,0,0,222,223,5,105,0,0,223,224,5,109,0,0,224,225,5,97,0,0,225,
        226,5,116,0,0,226,227,5,105,0,0,227,228,5,111,0,0,228,229,5,110,
        0,0,229,42,1,0,0,0,230,231,5,98,0,0,231,232,5,111,0,0,232,233,5,
        111,0,0,233,234,5,108,0,0,234,44,1,0,0,0,235,236,5,98,0,0,236,237,
        5,114,0,0,237,238,5,101,0,0,238,239,5,97,0,0,239,240,5,107,0,0,240,
        46,1,0,0,0,241,242,5,99,0,0,242,243,5,97,0,0,243,244,5,115,0,0,244,
        245,5,101,0,0,245,48,1,0,0,0,246,247,5,99,0,0,247,248,5,111,0,0,
        248,249,5,109,0,0,249,250,5,109,0,0,250,251,5,97,0,0,251,252,5,110,
        0,0,252,253,5,100,0,0,253,50,1,0,0,0,254,255,5,99,0,0,255,256,5,
        111,0,0,256,257,5,109,0,0,257,258,5,109,0,0,258,259,5,111,0,0,259,
        260,5,110,0,0,260,52,1,0,0,0,261,262,5,99,0,0,262,263,5,111,0,0,
        263,264,5,110,0,0,264,265,5,115,0,0,265,266,5,116,0,0,266,54,1,0,
        0,0,267,268,5,100,0,0,268,269,5,101,0,0,269,270,5,102,0,0,270,271,
        5,97,0,0,271,272,5,117,0,0,272,273,5,108,0,0,273,274,5,116,0,0,274,
        56,1,0,0,0,275,276,5,101,0,0,276,277,5,108,0,0,277,278,5,115,0,0,
        278,279,5,101,0,0,279,58,1,0,0,0,280,281,5,101,0,0,281,282,5,110,
        0,0,282,283,5,117,0,0,283,284,5,109,0,0,284,60,1,0,0,0,285,286,5,
        101,0,0,286,287,5,110,0,0,287,288,5,116,0,0,288,289,5,114,0,0,289,
        290,5,121,0,0,290,62,1,0,0,0,291,292,5,102,0,0,292,293,5,97,0,0,
        293,294,5,108,0,0,294,295,5,115,0,0,295,296,5,101,0,0,296,64,1,0,
        0,0,297,298,5,102,0,0,298,299,5,108,0,0,299,300,5,97,0,0,300,301,
        5,103,0,0,301,66,1,0,0,0,302,303,5,102,0,0,303,304,5,108,0,0,304,
        305,5,111,0,0,305,306,5,97,0,0,306,307,5,116,0,0,307,68,1,0,0,0,
        308,309,5,102,0,0,309,310,5,111,0,0,310,311,5,114,0,0,311,70,1,0,
        0,0,312,313,5,102,0,0,313,314,5,114,0,0,314,315,5,111,0,0,315,316,
        5,109,0,0,316,72,1,0,0,0,317,318,5,102,0,0,318,319,5,117,0,0,319,
        320,5,110,0,0,320,321,5,99,0,0,321,322,5,116,0,0,322,323,5,105,0,
        0,323,324,5,111,0,0,324,325,5,110,0,0,325,74,1,0,0,0,326,327,5,105,
        0,0,327,328,5,102,0,0,328,76,1,0,0,0,329,330,5,105,0,0,330,331,5,
        109,0,0,331,332,5,112,0,0,332,333,5,111,0,0,333,334,5,114,0,0,334,
        335,5,116,0,0,335,78,1,0,0,0,336,337,5,105,0,0,337,338,5,110,0,0,
        338,339,5,116,0,0,339,80,1,0,0,0,340,341,5,108,0,0,341,342,5,111,
        0,0,342,343,5,99,0,0,343,344,5,107,0,0,344,82,1,0,0,0,345,346,5,
        110,0,0,346,347,5,97,0,0,347,348,5,109,0,0,348,349,5,101,0,0,349,
        350,5,115,0,0,350,351,5,112,0,0,351,352,5,97,0,0,352,353,5,99,0,
        0,353,354,5,101,0,0,354,84,1,0,0,0,355,356,5,115,0,0,356,357,5,116,
        0,0,357,358,5,114,0,0,358,86,1,0,0,0,359,360,5,115,0,0,360,361,5,
        121,0,0,361,362,5,115,0,0,362,363,5,102,0,0,363,364,5,108,0,0,364,
        365,5,97,0,0,365,366,5,103,0,0,366,88,1,0,0,0,367,368,5,115,0,0,
        368,369,5,119,0,0,369,370,5,105,0,0,370,371,5,116,0,0,371,372,5,
        99,0,0,372,373,5,104,0,0,373,90,1,0,0,0,374,375,5,114,0,0,375,376,
        5,101,0,0,376,377,5,116,0,0,377,378,5,117,0,0,378,379,5,114,0,0,
        379,380,5,110,0,0,380,92,1,0,0,0,381,382,5,116,0,0,382,383,5,97,
        0,0,383,384,5,108,0,0,384,385,5,107,0,0,385,94,1,0,0,0,386,387,5,
        116,0,0,387,388,5,114,0,0,388,389,5,117,0,0,389,390,5,101,0,0,390,
        96,1,0,0,0,391,392,5,117,0,0,392,393,5,110,0,0,393,394,5,108,0,0,
        394,395,5,101,0,0,395,396,5,115,0,0,396,397,5,115,0,0,397,98,1,0,
        0,0,398,399,5,119,0,0,399,400,5,104,0,0,400,401,5,105,0,0,401,402,
        5,108,0,0,402,403,5,101,0,0,403,100,1,0,0,0,404,409,3,103,51,0,405,
        406,5,58,0,0,406,407,5,58,0,0,407,408,1,0,0,0,408,410,3,103,51,0,
        409,405,1,0,0,0,410,411,1,0,0,0,411,409,1,0,0,0,411,412,1,0,0,0,
        412,102,1,0,0,0,413,418,3,105,52,0,414,417,3,105,52,0,415,417,3,
        107,53,0,416,414,1,0,0,0,416,415,1,0,0,0,417,420,1,0,0,0,418,416,
        1,0,0,0,418,419,1,0,0,0,419,104,1,0,0,0,420,418,1,0,0,0,421,422,
        7,3,0,0,422,106,1,0,0,0,423,424,7,4,0,0,424,108,1,0,0,0,425,426,
        5,69,0,0,426,430,5,81,0,0,427,428,5,61,0,0,428,430,5,61,0,0,429,
        425,1,0,0,0,429,427,1,0,0,0,430,110,1,0,0,0,431,432,5,78,0,0,432,
        436,5,69,0,0,433,434,5,33,0,0,434,436,5,61,0,0,435,431,1,0,0,0,435,
        433,1,0,0,0,436,112,1,0,0,0,437,438,5,76,0,0,438,441,5,84,0,0,439,
        441,5,60,0,0,440,437,1,0,0,0,440,439,1,0,0,0,441,114,1,0,0,0,442,
        443,5,71,0,0,443,446,5,84,0,0,444,446,5,62,0,0,445,442,1,0,0,0,445,
        444,1,0,0,0,446,116,1,0,0,0,447,448,5,76,0,0,448,452,5,69,0,0,449,
        450,5,60,0,0,450,452,5,61,0,0,451,447,1,0,0,0,451,449,1,0,0,0,452,
        118,1,0,0,0,453,454,5,71,0,0,454,458,5,69,0,0,455,456,5,62,0,0,456,
        458,5,61,0,0,457,453,1,0,0,0,457,455,1,0,0,0,458,120,1,0,0,0,18,
        0,152,163,171,182,191,196,202,204,411,416,418,429,435,440,445,451,
        457,1,6,0,0
    ]

class evcLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    STRING = 13
    Comparator = 14
    Comment = 15
    BlockComment = 16
    NUMBER = 17
    EOL = 18
    WS = 19
    ALIAS = 20
    ANIMATION = 21
    BOOL = 22
    BREAK = 23
    CASE = 24
    COMMAND = 25
    COMMON = 26
    CONST = 27
    DEFAULT = 28
    ELSE = 29
    ENUM = 30
    ENTRY = 31
    FALSE = 32
    FLAG = 33
    FLOAT = 34
    FOR = 35
    FROM = 36
    FUNCTION = 37
    IF = 38
    IMPORT = 39
    INT = 40
    LOCK = 41
    NAMESPACE = 42
    STR = 43
    SYSFLAG = 44
    SWITCH = 45
    RETURN = 46
    TALK = 47
    TRUE = 48
    UNLESS = 49
    WHILE = 50
    ScopedIdentifier = 51
    Identifier = 52

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'*'", "'{'", "'}'", "':'", "'='", "','", "'('", "')'", 
            "'->'", "'+='", "'-='", "'alias'", "'animation'", "'bool'", 
            "'break'", "'case'", "'command'", "'common'", "'const'", "'default'", 
            "'else'", "'enum'", "'entry'", "'false'", "'flag'", "'float'", 
            "'for'", "'from'", "'function'", "'if'", "'import'", "'int'", 
            "'lock'", "'namespace'", "'str'", "'sysflag'", "'switch'", "'return'", 
            "'talk'", "'true'", "'unless'", "'while'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "Comparator", "Comment", "BlockComment", "NUMBER", 
            "EOL", "WS", "ALIAS", "ANIMATION", "BOOL", "BREAK", "CASE", 
            "COMMAND", "COMMON", "CONST", "DEFAULT", "ELSE", "ENUM", "ENTRY", 
            "FALSE", "FLAG", "FLOAT", "FOR", "FROM", "FUNCTION", "IF", "IMPORT", 
            "INT", "LOCK", "NAMESPACE", "STR", "SYSFLAG", "SWITCH", "RETURN", 
            "TALK", "TRUE", "UNLESS", "WHILE", "ScopedIdentifier", "Identifier" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "STRING", "Comparator", 
                  "Comment", "BlockComment", "NUMBER", "EOL", "WS", "ALIAS", 
                  "ANIMATION", "BOOL", "BREAK", "CASE", "COMMAND", "COMMON", 
                  "CONST", "DEFAULT", "ELSE", "ENUM", "ENTRY", "FALSE", 
                  "FLAG", "FLOAT", "FOR", "FROM", "FUNCTION", "IF", "IMPORT", 
                  "INT", "LOCK", "NAMESPACE", "STR", "SYSFLAG", "SWITCH", 
                  "RETURN", "TALK", "TRUE", "UNLESS", "WHILE", "ScopedIdentifier", 
                  "Identifier", "Nondigit", "Digit", "EQ", "NE", "LT", "GT", 
                  "LE", "GE" ]

    grammarFileName = "evc.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


